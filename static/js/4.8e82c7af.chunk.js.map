{"version":3,"sources":["hoc/redirectHOC.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","redirectComponent","this","props","to","React","connect","module","exports","DialogItem","path","id","render","className","s","dialog","active","image","src","imgSrc","alt","name","Message","message","maxLength","fieldMaxLength","AddNewReduxMessageForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","requiredField","placeholder","Dialogs","dialogNames","dialogData","namesData","map","dialogMessages","messagesData","dialogs","dialogItems","messages","value","addNewMessage","compose","dialogPage","dispatch","text","addNewMessageActionCreator"],"mappings":"6MAIMA,EAA6B,SAAAC,GAC/B,MAAO,CACHC,OAAQD,EAAME,KAAKD,SAIdE,EAAmB,SAAAC,GAAc,IACpCC,EADmC,uKAGjC,OAAIC,KAAKC,MAAMN,OACR,kBAACG,EAAcE,KAAKC,OADG,kBAAC,IAAD,CAAUC,GAAG,eAHV,GACTC,IAAML,WAOtC,OADgCM,YAAQX,EAARW,CAAoCL,K,oBChBxEM,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,OAAS,wBAAwB,MAAQ,yB,uHCenOC,E,4MAXXC,KAAO,YAAc,EAAKP,MAAMQ,G,EAEhCC,OAAS,WACL,OACI,yBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,QAC/B,yBAAKH,UAAWC,IAAEG,MAAOC,IAAK,EAAKf,MAAMgB,OAAQC,IAAI,KACrD,kBAAC,IAAD,CAAShB,GAAI,EAAKM,MAAO,EAAKP,MAAMkB,Q,YAP3BhB,IAAML,WCOhBsB,E,4MAPbV,OAAS,WACP,OACI,yBAAKC,UAAWC,IAAES,SAAU,EAAKpB,MAAMoB,U,YAHzBlB,IAAML,W,wCCMtBwB,EAAYC,YAAe,IA8C3BC,EAAyBC,YAAU,CAAEC,KAAM,iBAAlBD,EAbL,SAAAxB,GACxB,OACI,0BAAM0B,SAAU1B,EAAM2B,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,SAAU,CAACC,IAAeX,GAAYH,KAAK,gBAAgBe,YAAY,mBAEvG,6BACI,qDAiECC,EAvGC,SAAAlC,GAEZ,IAIMmC,EAAcnC,EAAMoC,WAAWC,UAChCC,KAAK,SAAApB,GAAI,OAAI,kBAAC,EAAD,CAAYA,KAAMA,EAAKA,KAAMV,GAAIU,EAAKV,GAAIQ,OAAQE,EAAKF,YAEnEuB,EAAiBvC,EAAMoC,WAAWI,aACnCF,KAAK,SAAAlB,GAAO,OAAI,kBAAC,EAAD,CAASA,QAASA,EAAQA,aAG/C,OAAIpB,EAAMN,OAEN,6BACI,yBAAKgB,UAAWC,IAAE8B,SACd,yBAAK/B,UAAWC,IAAE+B,aACbP,GAGL,yBAAKzB,UAAWC,IAAEgC,UACbJ,GAEL,kBAAChB,EAAD,CAAwBG,SAtBb,SAAAkB,GACnB5C,EAAM6C,cAAcD,EAAMC,oBAUL,kBAAC,IAAD,CAAU5C,GAAI,Y,wBCH5B6C,sBACXlD,IACAO,aAhBkB,SAAAV,GAClB,MAAO,CACH2C,WAAY3C,EAAMsD,eAID,SAAAC,GACrB,MAAO,CACHH,cAAe,SAAAI,GACXD,EAASE,YAA2BD,SAKjCH,CAGbZ","file":"static/js/4.8e82c7af.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToPropsForRedirect = state => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n};\r\n\r\nexport const withAuthRedirect = Component => {\r\n    class redirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to='/login'/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    let connectedWithAuthRedirect = connect(mapStateToPropsForRedirect)(redirectComponent);\r\n    return connectedWithAuthRedirect;\r\n};\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2SfAj\",\"dialogItems\":\"Dialogs_dialogItems__1xqJD\",\"dialog\":\"Dialogs_dialog__GS1Xi\",\"messages\":\"Dialogs_messages__1LtY0\",\"message\":\"Dialogs_message__2GmZ7\",\"active\":\"Dialogs_active__3wDaB\",\"image\":\"Dialogs_image__2TevQ\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nclass DialogItem extends React.Component {\r\n    path = \"/dialogs/\" + this.props.id;\r\n\r\n    render = () => {\r\n        return(\r\n            <div className={s.dialog + \" \" + s.active}>\r\n                <img className={s.image} src={this.props.imgSrc} alt=\"\"/>\r\n                <NavLink to={this.path}>{this.props.name}</NavLink></div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DialogItem;\r\n","import React from 'react';\r\nimport s from './../Dialogs.module.css'\r\n\r\nclass Message extends React.Component {\r\n  render = () => {\r\n    return(\r\n        <div className={s.message}>{this.props.message}</div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormControls/FormControls\";\r\nimport {fieldMaxLength, requiredField} from \"../../utils/validators/validator\";\r\n\r\nconst maxLength = fieldMaxLength(50);\r\n\r\nconst Dialogs = props => {\r\n\r\n    const sendNewMessage = value => {\r\n        props.addNewMessage(value.addNewMessage);\r\n    };\r\n\r\n    const dialogNames = props.dialogData.namesData\r\n        .map( name => <DialogItem name={name.name} id={name.id} imgSrc={name.imgSrc}/>);\r\n\r\n    const dialogMessages = props.dialogData.messagesData\r\n        .map( message => <Message message={message.message} />);\r\n\r\n\r\n    if(!props.isAuth) return <Redirect to={\"/login\"} />;\r\n    return (\r\n        <div>\r\n            <div className={s.dialogs}>\r\n                <div className={s.dialogItems}>\r\n                    {dialogNames}\r\n                </div>\r\n\r\n                <div className={s.messages}>\r\n                    {dialogMessages}\r\n                </div>\r\n                <AddNewReduxMessageForm onSubmit={sendNewMessage}/>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nconst addNewMessageForm = props => {\r\n  return(\r\n      <form onSubmit={props.handleSubmit}>\r\n          <div>\r\n              <Field component={Textarea} validate={[requiredField, maxLength]} name=\"addNewMessage\" placeholder=\"Enter message\"/>\r\n          </div>\r\n          <div>\r\n              <button>Send message</button>\r\n          </div>\r\n      </form>\r\n  )\r\n};\r\n\r\nconst AddNewReduxMessageForm = reduxForm({ form: 'addNewMessage'})(addNewMessageForm);\r\n\r\n/*\r\nclass Dialogs extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            addNewMessage: props.addNewMessage,\r\n            onMessageChange: props.onMessageChange\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.addNewMessage = () => {\r\n            let text = this.newMessageRef.current.value;\r\n            this.state.addNewMessage(text);\r\n            this.newMessageRef.current.value = '';\r\n        };\r\n\r\n        this.onMessageChange = e => {\r\n            this.state.onMessageChange(e);\r\n        }\r\n    }\r\n\r\n    messageBody = this.props.dialogData.newMessageBody;\r\n\r\n    dialogNames = this.props.dialogData.namesData\r\n        .map( name => <DialogItem name={name.name} id={name.id} imgSrc={name.imgSrc}/>);\r\n\r\n    dialogMessages = this.props.dialogData.messagesData\r\n        .map( message => <Message message={message.message} />);\r\n\r\n    newMessageRef = React.createRef();\r\n\r\n    render = () => {\r\n        return (\r\n            <div>\r\n                <div className={s.dialogs}>\r\n                    <div className={s.dialogItems}>\r\n                        {this.dialogNames}\r\n                    </div>\r\n\r\n                    <div className={s.messages}>\r\n                        {this.dialogMessages}\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <textarea ref={this.newMessageRef} value={this.messageBody} onChange={() => this.onMessageChange} cols=\"10\" rows=\"2\"></textarea>\r\n                    <div>\r\n                        <button onClick={this.addNewMessage}>Send message</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n*/\r\n\r\nexport default Dialogs\r\n","import React from 'react';\r\nimport {addNewMessageActionCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/redirectHOC\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = state => {\r\n    return {\r\n        dialogData: state.dialogPage,\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = dispatch => {\r\n    return {\r\n        addNewMessage: text => {\r\n            dispatch(addNewMessageActionCreator(text));\r\n        }\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(Dialogs);\r\n"],"sourceRoot":""}